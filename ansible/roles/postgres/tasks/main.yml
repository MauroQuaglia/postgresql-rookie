---
- name: "Install required packages"
  apt:
    update_cache: true
    name:
      - "gnupg2"

- name: "Remove all PostgreSQL installation"
  apt:
    name: "postgresql-16"
    state: absent
    autoremove: true
    purge: true

- name: "Collect LC_CTYPE"
  shell: "locale | grep LC_CTYPE"
  register: lc_ctype

- name: "Check LC_CTYPE"
  assert:
    that: lc_ctype.stdout == 'LC_CTYPE="{{ postgres_lc_ctype }}"'
    fail_msg: "LC_CTYPE is not {{ postgres_lc_ctype }}"
    success_msg: "LC_CTYPE is {{ postgres_lc_ctype }}"

- name: "Collect LC_COLLATE"
  shell: "locale | grep LC_COLLATE"
  register: lc_collate

- name: "Check LC_COLLATE"
  assert:
    that: lc_collate.stdout == 'LC_COLLATE="{{ postgres_lc_collate }}"'
    fail_msg: "LC_COLLATE is not {{ postgres_lc_collate }}"
    success_msg: "LC_COLLATE is {{ postgres_lc_collate }}"

- name: "Install apt key"
  apt_key:
    url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"

- name: "Add apt repository"
  apt_repository:
    repo: "deb https://apt.postgresql.org/pub/repos/apt/ {{ansible_distribution_release}}-pgdg main"
    filename: 'pgdg'

- name: "Install PostgreSQL and extensions"
  apt:
    update_cache: true
    pkg:
      - "postgresql-{{ postgres_version }}"
      - "postgresql-contrib"

- name: "Copy pg_hba.conf file"
  tags: "config"
  copy:
    src: "customs/v{{ postgres_version }}/pg_hba.conf"
    dest: "/etc/postgresql/{{ postgres_version }}/main"
    owner: "postgres"
    group: "postgres"
    mode: "0640"
  when: postgres_custom_config

- name: "Copy postgresql.conf file"
  tags: "config"
  copy:
    src: "customs/v{{ postgres_version }}/postgresql.conf"
    dest: "/etc/postgresql/{{ postgres_version }}/main"
    owner: "postgres"
    group: "postgres"
    mode: "0644"
  when: postgres_custom_config

- name: "Copy postgresql.auto.conf file"
  tags: "config"
  copy:
    src: "customs/v{{ postgres_version }}/postgresql.auto.conf"
    dest: "/var/lib/postgresql/{{ postgres_version }}/main"
    owner: "postgres"
    group: "postgres"
    mode: "0600"
  when: postgres_custom_config

- name: "Copy pg_ident.conf file"
  tags: "config"
  copy:
    src: "customs/v{{ postgres_version }}/pg_ident.conf"
    dest: "/etc/postgresql/{{ postgres_version }}/main"
    owner: "postgres"
    group: "postgres"
    mode: "0640"
  when: postgres_custom_config

- name: "Upload CSV file with data"
  tags: 'upload_csv'
  copy:
    src: "teachers.csv"
    dest: "/var/lib/postgresql/{{ postgres_version }}/main"
    owner: "postgres"
    group: "postgres"
    mode: "0644"
  when: postgres_upload_csv

- name: "Create tablespaces directory"
  file:
    path: "/home/vagrant/tablespaces"
    state: "directory"
    mode: 0700
    owner: "postgres"
    group: "postgres"

# Deve essere criptata la password altrimenti non funziona.
# mkpasswd --method=sha-512
# ciccio
- name: "Change password for SO-user postgres"
  user:
    name: "postgres"
    update_password: always
    password: "$6$6c5JjNDJl4VPyVyS$FuFYEM/eg0BSZ48V2jvB4cQEDr6rJ/HqUgUwZcS91p6/8/c3XUR4ZuQMDDxAStVSdlfzidIGYdlytIDJXYCYV0"

- name: "Stop PostgresSQL"
  tags: "config"
  service:
    name: "postgresql"
    state: "stopped"

- name: "Start PostgresSQL"
  tags: "config"
  service:
    name: "postgresql"
    state: "started"
...